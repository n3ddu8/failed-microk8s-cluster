- name: Install MicroK8s
  hosts: all
  become: true
  tasks:

    - name: Install MicroK8s
      shell: snap install microk8s --classic

    - name: Allow non-root access to MicroK8s
      shell: sudo usermod -aG microk8s $USER

    - name: Configure MicroK8s
      shell: sudo microk8s status --wait-ready

-  name: Enable MicroK8s Add-ons
   hosts: "{{ groups['master'][0] }}"
   become: true
   tasks:
 
     - name: Enable CIS Hardening add-on
       shell: microk8s enable cis-hardening
       register: cis_hardening_addon
       failed_when: >
         cis_hardening_addon.rc != 0 and
         "'is already enabled'" not in cis_hardening_addon.stdout
 
     - name: Enable DNS add-on
       shell: microk8s enable dns
       register: dns_addon
       failed_when: >
         dns_addon.rc != 0 and
         "'is already enabled'" not in dns_addon.stdout

     - name: Enable Host-Access add-on
       shell: microk8s enable host-access
       register: host_access_addon
       failed_when: >
         host_access_addon.rc != 0 and
         "'is already enabled'" not in host_access_addon.stdout

     - name: Enable Helm add-on
       shell: microk8s enable helm
       register: helm_addon
       failed_when: >
         helm_addon.rc != 0 and
         "'is already enabled'" not in helm_addon.stdout
     
     - name: Enable Prometheus add-on
       shell: microk8s enable prometheus
       register: prometheus_addon
       failed_when: >
         prometheus_addon.rc != 0 and
         "'is already enabled'" not in prometheus_addon.stdout
     
     - name: Enable community add-on
       shell: microk8s enable community
       register: community_addon
       failed_when: >
         community_addon.rc != 0 and
         "'is already enabled'" not in dns_addon.stdout

     - name: Enable Portainer add-on
       shell: microk8s enable portainer
       register: portainer_addon
       failed_when: >
         portainer_addon.rc != 0 and
         "'is already enabled'" not in portainer_addon.stdout

- name: Add nodes to Cluster
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Get cluster nodes
      delegate_to: "{{ groups['master'][0] }}"
      shell: microk8s.kubectl get nodes | awk 'NR>1 {print $1}' | xargs
      register: cluster_nodes

    - name: Gather nodes to exclude
      set_fact:
        exclude_nodes: "{{ cluster_nodes.stdout.split(' ') }}"

    - name: Filter target nodes
      set_fact:
        remaining_nodes: "{{ groups['workers'] | difference(exclude_nodes) }}"

    - name: Add individual node to Cluster
      include_tasks: playbooks/add-node.yaml
      with_items: "{{ remaining_nodes }}"
      vars:
        target_node: "{{ item }}"

- name: Add nodes to Cluster
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Get cluster nodes
      delegate_to: "{{ groups['master'][0] }}"
      shell: microk8s.kubectl get nodes | awk 'NR>1 {print $1}' | xargs
      register: cluster_nodes

    - name: Gather nodes to exclude
      set_fact:
        exclude_nodes: "{{ cluster_nodes.stdout.split(' ') }}"

    - name: Filter target nodes
      set_fact:
        remaining_nodes: "{{ groups['workers'] | difference(exclude_nodes) }}"

    - name: Add individual node to Cluster
      include_tasks: playbooks/add-node.yaml
      with_items: "{{ remaining_nodes }}"
      vars:
        target_node: "{{ item }}"

